DROP TABLE users CASCADE;
DROP TABLE categories CASCADE;
-- DROP TABLE locations CASCADE;
DROP TABLE participation_requests CASCADE;
DROP TABLE events CASCADE;

CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name  VARCHAR(255)                            NOT NULL,
    email VARCHAR(512)                            NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (id)

);

-- CREATE TABLE IF NOT EXISTS locations
-- (
--     id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
--     latitude  decimal                                 NOT NULL,
--     longitude decimal                                 NOT NULL,
--     CONSTRAINT pk_locations PRIMARY KEY (id)
--
-- );

CREATE TABLE IF NOT EXISTS events
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation        VARCHAR(255)                            NOT NULL,
    category_id       BIGINT                                  NOT NULL,
    confirmed_requests BIGINT,
    created_on         TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    description       VARCHAR(512)                            NOT NULL,
    event_date         TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    initiator_id      BIGINT                                  NOT NULL,
--     location_id       BIGINT                                  NOT NULL,
    lat               DECIMAL                                 NOT NULL,
    lon               DECIMAL                                 NOT NULL,
    paid              BOOLEAN DEFAULT false,
    participant_limit  BIGINT  DEFAULT 0,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN DEFAULT true,
    state             VARCHAR(255)                            NOT NULL,
    title             VARCHAR(255)                            NOT NULL,
    views             BIGINT  DEFAULT 0,
    CONSTRAINT pk_events PRIMARY KEY (id),
    CONSTRAINT FK_EVENT_ON_INITIATOR FOREIGN KEY (initiator_id) REFERENCES users (id),
--     CONSTRAINT FK_EVENT_ON_LOCATION FOREIGN KEY (location_id) REFERENCES locations (id),
    CONSTRAINT FK_EVENT_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES categories (id)
);

CREATE TABLE IF NOT EXISTS participation_requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id     BIGINT                                  NOT NULL,
    created      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    requester_id BIGINT                                  NOT NULL,
    status       VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_requests PRIMARY KEY (id),
    CONSTRAINT FK_REQUEST_ON_REQUESTER FOREIGN KEY (requester_id) REFERENCES users (id),
    CONSTRAINT FK_REQUEST_ON_EVENT FOREIGN KEY (event_id) REFERENCES events (id)
);


--
-- CREATE TABLE IF NOT EXISTS requests
-- (
--     id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
--     description  VARCHAR(4000)                           NOT NULL,
--     requestor_id BIGINT,
--     created      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
--     CONSTRAINT pk_item_request PRIMARY KEY (id),
--     CONSTRAINT FK_ITEM_REQUEST_ON_REQUESTER FOREIGN KEY (requestor_id) REFERENCES users (id)
-- );
--
-- CREATE TABLE IF NOT EXISTS items
-- (
--     id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
--     name        VARCHAR(255),
--     description VARCHAR(4000),
--     available   BOOLEAN,
--     owner_id    BIGINT                                  NOT NULL,
--     request_id  BIGINT,
--     CONSTRAINT pk_item PRIMARY KEY (id),
--     CONSTRAINT FK_ITEM_ON_OWNER FOREIGN KEY (owner_id) REFERENCES users (id),
--     CONSTRAINT FK_ITEM_ON_REQUEST FOREIGN KEY (request_id) REFERENCES requests (id),
--     CONSTRAINT UQ_OWNER_ITEM_NAME UNIQUE (owner_id, name)
-- );
--
-- CREATE TABLE IF NOT EXISTS bookings
-- (
--     id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
--     start_date TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
--     end_date   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
--     item_id    BIGINT,
--     booker_id  BIGINT,
--     status     VARCHAR(20)                                 NOT NULL,
--     CONSTRAINT pk_booking PRIMARY KEY (id),
--     CONSTRAINT FK_BOOKING_ON_BOOKER FOREIGN KEY (booker_id) REFERENCES users (id),
--     CONSTRAINT FK_BOOKING_ON_ITEM FOREIGN KEY (item_id) REFERENCES items (id)
-- );
--
-- CREATE TABLE IF NOT EXISTS comments
-- (
--     id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
--     text      VARCHAR(4000)                           NOT NULL,
--     item_id   BIGINT,
--     author_id BIGINT,
--     created  TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
--     CONSTRAINT pk_comment PRIMARY KEY (id),
--     CONSTRAINT FK_COMMENT_ON_AUTHOR FOREIGN KEY (author_id) REFERENCES users (id),
--     CONSTRAINT FK_COMMENT_ON_ITEM FOREIGN KEY (item_id) REFERENCES items (id)
-- );